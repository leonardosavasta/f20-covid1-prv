geom_point(mapping = aes(x = displ, y = hwy)) + facet_grid(drv ~ cyl)
?mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) + facet_grid(. ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) + facet_grid(~ cyl)
.
.
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) + facet_grid(. ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) + facet_grid(. ~ hwy)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) + facet_grid(. ~ cty)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) + facet_grid(drv ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = drv, y = cyl))
?mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) + facet_wrap(~ class, nrow = 2)
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy))
?mpg
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) + geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + geom_point() + geom_smooth()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = drv)) + geom_point() + geom_smooth(se = FALSE)
geom_smooth()
?geom_smooth()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = drv)) + geom_point() + geom_smooth(se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = drv)) + geom_point() + geom_smooth(se = TRUE)
?mpg
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = drv)) + geom_point() + geom_smooth(se = FALSE)
library(MASS)
View(Boston)
names(Boston)
View(Boston)
Boston?
?
()
?Boston
summary(Boston)
attach(Boston)
library(ggplot2)
p <- ggplot(Boston, aes(x=lstat, y=medv)) +
geom_point()
print(p)
lm.fit <- lm(medv ~ lstat)
lm.fit
summary(lm.fit)
?Boston
confint.lm(lm.fit)
lm.fit
lm.fit.lstat
lm.fit$lstat
lm.fit
lm.fit[]
lm.fit
typeof(lm.fit)
lm.fit[0]
lm.fit[1]
lm.fit[1]
lm.fit[2]
lm.fit
View(lm.fit)
lm.fit[1]
lm.fit[1][0]
lm.fit[1][1]
lm.fit[1][2]
lm.fit[1][1][1]
lm.fit['coefficients']
lm.fit['coefficients']['lstat']
typeof(lm.fit['coefficients'])
typeof(lm.fit['coefficients'][0]
typeof(lm.fit['coefficients'][0])
typeof(lm.fit['coefficients'][0])
typeof(lm.fit['coefficients'][1])
lm.fit
print(34.55 + 5 * (-0.95))
print(34.55 + 10 * (-0.95))
print(34.55 + 15 * (-0.95))
predict(lm.fit, data.frame(lstat = c(5, 10, 15)), interval = "confidence")
plot(lstat, medv) abline(lm.fit)
plot(lstat, medv)
plot(lstat, medv)
plot(lstat, medv) + abline(lm.fit)
plot(lstat, medv) + abline(lm.fit, lwd=3, col="red")
plot(lstat, medv) + abline(lm.fit, lwd=10, col="red")
plot(lstat, medv) + abline(lm.fit, lwd=3, col="red")
plot(lstat, medv, pch=20) + abline(lm.fit, lwd=3, col="red")
plot(lstat, medv, pch=10) + abline(lm.fit, lwd=3, col="red")
plot(1:20)
plot(1:20, 1:20, pch=1:20)
plot(lm.fit)
ggplot(Boston, aes(x=lstat, y=medv)) + geom_point() + geom_smooth(method="lm")
library(ggplot2)
library(ISLR)
install.packages('ISLR')
library(ISLR)
ggplot(Boston, aes(x=age, y=medv)) + geom_point()
ggplot(Boston, aes(x=nox, y=medv)) + geom_point()
ggplot(Boston, aes(x=indus, y=medv)) + geom_point()
ggplot(Boston, aes(x=crim, y=medv)) + geom_point()
ggplot(Boston, aes(x=black, y=medv)) + geom_point()
ggplot(Boston, aes(x=ptratio, y=medv)) + geom_point()
ggplot(Boston, aes(x=dis, y=medv)) + geom_point()
summary(Auto)
?Auto
ggplot(Auto, aes(x=horsepower, y=mpg)) + geom_point()
lm.fit <- lm(mpg <- horsepower)
lm.fit <- lm(mpg ~ horsepower)
attach(Auto)
lm.fit <- lm(mpg ~ horsepower)
summary(lm.fit)
View(Auto)
?Boston
ggplot(Boston, aes(x=lstat, y=medv)) + geom_point() + geom_smooth(method="lm")
ggplot(Boston, aes(x=crim, y=medv)) + geom_point() + geom_smooth(method="lm")
ggplot(Boston, aes(x=nox, y=medv)) + geom_point() + geom_smooth(method="lm")
ggplot(Boston, aes(x=nox, y=lsat)) + geom_point() + geom_smooth(method="lm")
ggplot(Boston, aes(x=nox, y=lstat)) + geom_point() + geom_smooth(method="lm")
lm.fit <- lm(mpg ~ horsepower)
summary(lm.fit)
predict(lm.fit, data.frame(horsepower=c(120,200,300))
predict(lm.fit, data.frame(horsepower=c(120,200,300)))
predict(lm.fit, data.frame(horsepower=c(120,200,300)))
ggplot(Auto, aes(x=horsepower, y=mpg)) + geom_smooth(method='lm')
ggplot(Auto, aes(x=horsepower, y=mpg)) + geom_point() +  geom_smooth(method='lm')
View(Auto)
?Auto
ggplot(Auto, aes(x=horsepower, y=mpg)) + geom_point() +  geom_smooth(method='lm')
library(ISLR)
library(Default)
summary(Default)
attach(Default)
summary(Default)
m.balance <- glm(default ~ balance,, family = binomial)
summary(m.balance)
m.balance <- glm(default ~ balance,, family = binomial)
m.balance <- glm(default = balance,, family = binomial)
m.balance <- glm(default ~ balance,, family = binomial)
summary(m.balance)
pred.data <- data.frame(balance=c(1000,2000,3000))
predict(m.balance, pred.data, type="response")
m <- glm(default ~ balance + income + student, family = binomial)
summary(m)
predict(m, pred.data, type="response")
pred.data <- data.frame(balance=c(1000,2000,3000), income=1000, student="No")
predict(m, pred.data, type="response")
pred.data <- data.frame(balance=c(1000,2000,3000), income=1000, student="Yes")
predict(m, pred.data, type="response")
pred.data <- data.frame(balance=c(1000,2000,3000), income=4000, student="Yes")
predict(m, pred.data, type="response")
pred.data <- data.frame(balance=c(1000,2000,3000), income=4000, student="No")
predict(m, pred.data, type="response")
pred.probs <- predict(m, type="response")
View(pred.data)
pred.default < rep("No", nrow(Default))
pred.default <- rep("No", nrow(Default))
pred.default[pred.probs > 0.5] <- "Yes"
confusion.matrix <- table(default, pred.default)
print(confusion.matrix)
print(addmargins(confusion.matrix))
m.balance <- glm(default ~ balance,, family = binomial)
summary(m.balance)
pred.data <- data.frame(balance=c(1000,2000,3000))
predict(m.balance, pred.data, type="response")
library(ISLR)
attach(Default)
summary(Default)
m.balance <- glm(default ~ balance,, family = binomial)
summary(m.balance)
pred.data <- data.frame(balance=c(1000,2000,3000))
predict(m.balance, pred.data, type="response")
m <- glm(default ~ balance + income + student, family = binomial)
summary(m)
pred.data <- data.frame(balance=c(1000,2000,3000), income=4000, student="No")
predict(m, pred.data, type="response")
pred.probs <- predict(m, type="response")
pred.default <- rep("No", nrow(Default))
pred.default[pred.probs > 0.5] <- "Yes"
confusion.matrix <- table(default, pred.default)
print(addmargins(confusion.matrix))
library(ISLR)
attach(Wage)
# Fitting a 4 degree polynomial linear regression
fit <- lm(wage ~ poly(age,4))
age.grid <- seq(from=min(age), to=max(age))
se.bands <- cbind(pred$fit + 2*pred$se.fit, pred$fit - 2*pred$se.fit)
pred <- predict(fit, newdata=list(age=age.grid), se=TRUE)
se.bands <- cbind(pred$fit + 2*pred$se.fit, pred$fit - 2*pred$se.fit)
age.grid
list(age=age.grid)
list(age.grid)
cbind(pred$fit + 2*pred$se.fit, pred$fit - 2*pred$se.fit)
plot(age, wage, cex=.5, col="darkgray", main="Degree-4Polynomial")
lines(age.grid, pred$fit, lwd=2, col="blue")
matlines(age.grid, se.bands, lwd=1, col="blue", ltw=3)
plot(age, wage, cex=.5, col="darkgray", main="Degree-Polynomial")
age.grid <- seq(from=min(age), to=max(age))
for(degree in c(1:4)) {
fit <- lm(wage ~ poly(age,degree))
pred <- predict(fit, newdata=list(age=age.grid), se=TRUE)
se.bands <- cbind(pred$fit + 2*pred$se.fit, pred$fit - 2*pred$se.fit)
lines(age.grid, pred$fit, lwd=2, col="blue")
matlines(age.grid, se.bands, lwd=1, col="blue", ltw=3)
}
colors <- c(
"blue",
"red",
"green",
"orange"
)
for(degree in c(1:4)) {
fit <- lm(wage ~ poly(age,degree))
pred <- predict(fit, newdata=list(age=age.grid), se=TRUE)
se.bands <- cbind(pred$fit + 2*pred$se.fit, pred$fit - 2*pred$se.fit)
lines(age.grid, pred$fit, lwd=2, col=colors[degree])
matlines(age.grid, se.bands, lwd=1, col=colors[degree], ltw=3)
}
I(wage > 250)
wage > 250
wage > 250
fit <- glm(I(wage > 250), ~ poly(age, 4), family=binomial)
fit <- glm(I(wage > 250) ~ poly(age, 4), family=binomial)
se.bands.logit <- cbind(pred$fit + 2*pred$se.fit, pred$fit - 2*pred$se.fit)
se.bands <- exp(se.bands.logit) / (1 + exp(se.bands.logit))
plot(age, I(wage > 250), type="n", ylim=c(0,.2))
plot(age, I(wage > 250))
plot(age, I(wage > 250), type="n", ylim=c())
plot(age, I(wage > 250), type="n", ylim=c(1,.2))
plot(age, I(wage > 250), type="n", ylim=c(0,.2))
plot(age, I(wage > 250), type="n")
lines(age.grid, pfit, lwd=2, col="blue")
pred <- predict(fit, newdata=list(age=age.grid), se=TRUE)
pfit <- exp(pred$fit) / (1+exp(pred$fit))
se.bands.logit <- cbind(pred$fit + 2*pred$se.fit, pred$fit - 2*pred$se.fit)
se.bands <- exp(se.bands.logit) / (1 + exp(se.bands.logit))
plot(age, I(wage > 250), type="n", ylim=c(0,.2))
lines(age.grid, pfit, lwd=2, col="blue")
matlines(age.grid, se.bands, lwd=1, col="blue", ltw=3)
matlines(age.grid, se.bands, lwd=1, col="blue")
matlines(age.grid, se.bands, lwd=1, col="blue", lty=10)
matlines(age.grid, se.bands, lwd=1, col="blue", lty=100)
matlines(age.grid, se.bands, lwd=1, col="blue", lty=0)
matlines(age.grid, se.bands, lwd=5, col="blue", lty=3)
matlines(age.grid, se.bands, lwd=1, col="blue", lty=3)
matlines(age.grid, se.bands, lwd=1, col="blue", lty=3)
plot(age, I(wage > 250), type="n", ylim=c(0,.2))
lines(age.grid, pfit, lwd=2, col="blue")
matlines(age.grid, se.bands, lwd=1, col="blue", lty=3)
matlines(age.grid, se.bands, lwd=1, col="blue", lty=10)
plot(age, I(wage > 250), type="n", ylim=c(0,.2))
lines(age.grid, pfit, lwd=2, col="blue")
matlines(age.grid, se.bands, lwd=1, col="blue", lty=10)
plot(age, I(wage > 250), type="n", ylim=c(0,.2))
lines(age.grid, pfit, lwd=2, col="blue")
matlines(age.grid, se.bands, lwd=1, col="blue", lty=3)
rug(jjitter(age[wage<=250], side=1, ticksize=0.02))
rug(jitter(age[wage<=250], side=1, ticksize=0.02))
rug(jitter(age[wage<=250]), side=1, ticksize=0.02)
rug(jitter(age[wage>250]), side=3, ticksize=0.02)
plot(age, I(wage > 250), type="n", ylim=c(0,.2))
plot(age, I(wage > 250), type="n", ylim=c(0,.2))
rug(jitter(age[wage<=250]), side=1, ticksize=0.02)
rug(jitter(age[wage>250]), side=3, ticksize=0.02)
for(degree in c(1:4)) {
fit <- glm(I(wage > 250) ~ poly(age, degree), family=binomial)
pred <- predict(fit, newdata=list(age=age.grid), se=TRUE)
pfit <- exp(pred$fit) / (1+exp(pred$fit))
se.bands.logit <- cbind(pred$fit + 2*pred$se.fit, pred$fit - 2*pred$se.fit)
se.bands <- exp(se.bands.logit) / (1 + exp(se.bands.logit))
lines(age.grid, pfit, lwd=2, col=colors[degree])
matlines(age.grid, se.bands, lwd=1, col=colors[degree], lty=3)
}
table(cut(age, 4))
fit <- lm(wage ~ cut(age,4))
summary(fit)
knot.position <- c(25,40,60)
fit <- lm(wage ~ bs(age, knots=knot.position), data=Wage)
library(splines)
fit <- lm(wage ~ bs(age, knots=knot.position), data=Wage)
pred <- predict(fit, newdata=list(age=age.grid), se=TRUE)
plot(age, wage, cex=.5, col="darkgray")
lines(age.grid, pred$fit, lwd=2, col="red")
lines(age.grid, pred$fit + 2*pred$se, lty="dashed", col="red")
lines(age.grid, pred$fit - 2*pred$se, lty="dashed", col="red")
abline(v=knot.position, lty="dashed")
fit <- lm(wage ~ ns(age, knots=knot.position), data=Wage)
pred <- predict(fit, newdata=list(age=age.grid), se=TRUE)
plot(age, wage, cex=.5, col="darkgray")
lines(age.grid, pred$fit, lwd=2, col="red")
lines(age.grid, pred$fit + 2*pred$se, lty="dashed", col="red")
lines(age.grid, pred$fit - 2*pred$se, lty="dashed", col="red")
abline(v=knot.position, lty="dashed")
fit <- lm(wage ~ bs(age, knots=knot.position), data=Wage)
pred <- predict(fit, newdata=list(age=age.grid), se=TRUE)
plot(age, wage, cex=.5, col="darkgray")
lines(age.grid, pred$fit, lwd=2, col="red")
lines(age.grid, pred$fit + 2*pred$se, lty="dashed", col="red")
lines(age.grid, pred$fit - 2*pred$se, lty="dashed", col="red")
abline(v=knot.position, lty="dashed")
fit.bs <- lm(wage ~ bs(age, knots=knot.position), data=Wage)
fit.ns <- lm(wage ~ ns(age, knots=knot.position), data=Wage)
models <- c(fit.bs, fit.ns)
for(model in models) {
pred <- predict(fit, newdata=list(age=age.grid), se=TRUE)
lines(age.grid, pred$fit, lwd=2, col="red")
lines(age.grid, pred$fit + 2*pred$se, lty="dashed", col="red")
lines(age.grid, pred$fit - 2*pred$se, lty="dashed", col="red")
abline(v=knot.position, lty="dashed")
}
for(model in seq_along(models)) {
pred <- predict(models[model], newdata=list(age=age.grid), se=TRUE)
lines(age.grid, pred$fit, lwd=2, col="red")
lines(age.grid, pred$fit + 2*pred$se, lty="dashed", col=colors[model])
lines(age.grid, pred$fit - 2*pred$se, lty="dashed", col=colors[model])
abline(v=knot.position, lty="dashed")
}
print(models[model])
for(model in seq_along(models)) {
print(models[model])
pred <- predict(models[model], newdata=list(age=age.grid), se=TRUE)
lines(age.grid, pred$fit, lwd=2, col="red")
lines(age.grid, pred$fit + 2*pred$se, lty="dashed", col=colors[model])
lines(age.grid, pred$fit - 2*pred$se, lty="dashed", col=colors[model])
abline(v=knot.position, lty="dashed")
}
models[1]
models[2]
models[3]
models[1]
models[1][1]
models[1][1][1]
models[2][1][1]
models[2,2]
models[2]
models[1]
models <- c(fitbs, fitns)
fitbs <- lm(wage ~ bs(age, knots=knot.position), data=Wage)
fitns <- lm(wage ~ ns(age, knots=knot.position), data=Wage)
models <- c(fitbs, fitns)
models[1]
models[2]
fit.bs <- lm(wage ~ bs(age, knots=knot.position), data=Wage)
fit.ns <- lm(wage ~ ns(age, knots=knot.position), data=Wage)
c(fitbs, fitns)
c(fit.bs, fit.ns)
models <- list()
models[[1]] <- lm(wage ~ bs(age, knots=knot.position), data=Wage)
models[[2]] <- lm(wage ~ ns(age, knots=knot.position), data=Wage)
models[[1]]
models[[2]]
models[1] <- lm(wage ~ bs(age, knots=knot.position), data=Wage)
models <- list()
models[1] <- lm(wage ~ bs(age, knots=knot.position), data=Wage)
models[2] <- lm(wage ~ ns(age, knots=knot.position), data=Wage)
models[1]
models[2]
models[2]
models[3]
models[1]
models[2]
lines(age.grid, pred$fit, lwd=2, col="red")
lines(age.grid, pred$fit - 2*pred$se, lty="dashed", col=colors[model])
quantile(age.grid, probs=c(0,0.25,0.50,0.75,1))
knot.position <- quantile(age.grid, probs=c(0.25,0.50,0.75))
models <- list()
models[1] <- lm(wage ~ bs(age, knots=knot.position), data=Wage)
models[2] <- lm(wage ~ ns(age, knots=knot.position), data=Wage)
for(model in seq_along(models)) {
pred <- predict(models[model], newdata=list(age=age.grid), se=TRUE)
lines(age.grid, pred$fit, lwd=2, col="red")
lines(age.grid, pred$fit + 2*pred$se, lty="dashed", col=colors[model])
lines(age.grid, pred$fit - 2*pred$se, lty="dashed", col=colors[model])
abline(v=knot.position, lty="dashed")
}
models[[1]] <- lm(wage ~ bs(age, knots=knot.position), data=Wage)
models[[2]] <- lm(wage ~ ns(age, knots=knot.position), data=Wage)
for(model in seq_along(models)) {
pred <- predict(models[[model]], newdata=list(age=age.grid), se=TRUE)
lines(age.grid, pred$fit, lwd=2, col="red")
lines(age.grid, pred$fit + 2*pred$se, lty="dashed", col=colors[model])
lines(age.grid, pred$fit - 2*pred$se, lty="dashed", col=colors[model])
abline(v=knot.position, lty="dashed")
}
plot(age, wage, cex=.5, col="darkgray")
knot.position <- quantile(age.grid, probs=c(0.25,0.50,0.75))
models <- list()
models[[1]] <- lm(wage ~ bs(age, knots=knot.position), data=Wage)
models[[2]] <- lm(wage ~ ns(age, knots=knot.position), data=Wage)
for(model in seq_along(models)) {
pred <- predict(models[[model]], newdata=list(age=age.grid), se=TRUE)
lines(age.grid, pred$fit, lwd=2, col="red")
lines(age.grid, pred$fit + 2*pred$se, lty="dashed", col=colors[model])
lines(age.grid, pred$fit - 2*pred$se, lty="dashed", col=colors[model])
abline(v=knot.position, lty="dashed")
}
plot(age, wage, cex=.5, col="darkgray")
knot.position <- quantile(age.grid, probs=c(0.25,0.50,0.75))
models <- list()
models[[1]] <- lm(wage ~ bs(age, knots=knot.position), data=Wage)
models[[2]] <- lm(wage ~ ns(age, knots=knot.position), data=Wage)
for(model in seq_along(models)) {
pred <- predict(models[[model]], newdata=list(age=age.grid), se=TRUE)
lines(age.grid, pred$fit, lwd=2, col=colors[model])
lines(age.grid, pred$fit + 2*pred$se, lty="dashed", col=colors[model])
lines(age.grid, pred$fit - 2*pred$se, lty="dashed", col=colors[model])
abline(v=knot.position, lty="dashed")
}
fit <- smooth.spline(age, wage, df=16)
plot(age, wage, cex=.5, col="darkgray")
pred <- predict(fit, newdata=list(age=age.grid), se=TRUE)
lines(age.grid, pred$fit, lwd=2, col=colors[model])
lines(age.grid, pred$fit + 2*pred$se, lty="dashed", col="red")
lines(age.grid, pred$fit - 2*pred$se, lty="dashed", col="red")
abline(v=knot.position, lty="dashed")
fit <- smooth.spline(age, wage, df=16)
plot(age, wage, cex=.5, col="darkgray")
pred <- predict(fit, newdata=list(age=age.grid), se=TRUE)
lines(age.grid, pred$fit, lwd=2, col="red")
lines(age.grid, pred$fit + 2*pred$se, lty="dashed", col="red")
lines(age.grid, pred$fit - 2*pred$se, lty="dashed", col="red")
abline(v=knot.position, lty="dashed")
fit <- smooth.spline(age, wage, df=16)
fit2 <- smooth.spline(age, wage, cv=TRUE)
fit <- smooth.spline(age, wage, df=16)
fit2 <- smooth.spline(age, wage, cv=TRUE)
plot(age, wage, cex=.5, col="darkgray")
lines(fit, lwd=2, col="red")
lines(fit2, lwd=2, col="red")
lines(fit2, lwd=2, col="blue")
plot(age, wage, cex=.5, col="darkgray")
lines(fit, lwd=2, col="red")
lines(fit2, lwd=2, col="blue")
legend("topright", legend=c("16 DF", "6.8 DF (LOOCV)"), col=c("red", "blue"), lty=1, lwd=2, cex=.8)
legend("topright", legend=c("16 DF", "6.8 DF (LOOCV)"),
col=c("red", "blue"), lty=1, lwd=2, cex=.8)
gam2 <- gam(wage ~ s(year, 4) + s(age, 5), + education)
library(mgcv)
gam2 <- gam(wage ~ s(year, 4) + s(age, 5), + education)
gam2 <- gam(wage ~ s(year, 4) + s(age, 5), + education)
gam1 <- lm(wage ~ ns(year, 4) + ns(age,5) + education)
gam2 <- gam(wage ~ s(year, 4) + s(age, 5), + education)
gam2 <- gam(wage ~ ns(year, 4) + ns(age, 5), + education)
gam2 <- gam(wage ~ bs(year, 4) + bs(age, 5), + education)
gam2 <- gam(wage ~ s(year, 4) + s(age, 5), + education)
gam2 <- gam(wage ~ s(year, 4) + s(age, 5) + education)
gam2 <- gam(wage ~ ns(year, 4) + ns(age, 5) + education)
plot(gam2, se=TRUE, col="blue")
par(mfrow=c(1,3))
plot(gam2, se=TRUE, col="blue")
gam2 <- gam(wage ~ ns(year, 4) + ns(age, 5) + education)
par(mfrow=c(1,3))
plot(gam2, se=TRUE, col="blue")
plot(age, wage, cex=.5, col="darkgray")
gam2 <- gam(wage ~ ns(year, 4) + ns(age, 5) + education)
par(mfrow=c(1,3))
plot(gam2, se=TRUE, col="blue")
par(mfrow=c(2,3))
plot(gam2, se=TRUE, col="blue")
plot.gam(gam2)
gam2
plot(gam, se=TRUE, col="blue")
plot(gam2, se=TRUE, col="blue")
gam2 <- gam(wage ~ ns(year, 4) + ns(age, 5) + education, data=Wage)
par(mfrow=c(2,3))
plot(gam2, se=TRUE, col="blue")
gam2 <- gam(wage ~ ns(year, 4) + ns(age, 5) + education, data=Wage)
par(mfrow=c(1,3))
plot(gam2, se=TRUE, col="blue")
gam2 <- gam(wage ~ s(year, 4) + s(age, 5) + education, data=Wage)
library(gam)
install.packages("mgcv")
install.packages("mgcv")
library(ISLR)
library(mgcv)
gam2 <- gam(wage ~ s(year, 4) + s(age, 5) + education, data=Wage)
install.package("gam")
install.packages("gam")
library(gam)
gam2 <- gam(wage ~ s(year, 4) + s(age, 5) + education, data=Wage)
plot(gam2, se=TRUE, col="blue")
par(mfrow=c(1,3))
plot(gam2, se=TRUE, col="blue")
par(mar=c(1,1,1,1))
plot(gam2, se=TRUE, col="blue")
par(mar=c(2,2,2,2))
plot(gam2, se=TRUE, col="blue")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Read data with predictors and response
covid_data <- read.csv("./data/final_data.csv", header = TRUE, sep= ",")
#dimensions of final data
dim(covid_data)
View(covid_data)
# Creating data frame with model predictors
data <- covid_data[, c("Population_Count_2019", "Median_Age", "bachelor_degree", "FREQUENTLY"+"ALWAYS")]
# Creating data frame with model predictors
data <- covid_data[, c("Population_Count_2019", "Median_Age", "bachelor_degree", "Median_Household_Income")]
data$MaskUsage <- covid_data$FREQUENTLY + covid_data$ALWAYS
data
# Creating data frame with model predictors
data <- covid_data[, c("Population_Count_2019", "Median_Age", "bachelor_degree", "Median_Household_Income", "Covid_Infection_Rate")]
data$MaskUsage <- covid_data$FREQUENTLY + covid_data$ALWAYS
lm(data$Covid_Infection_Rate ~ .)
lm(Covid_Infection_Rate ~ ., data=data)
lm.fit <- lm(Covid_Infection_Rate ~ ., data=data)
summary(lm.fit)
