# Reading data on Population_count by county
pop_data1 <- read.csv("./data/population_data.csv",header = TRUE, sep= ",", encoding="UTF-8")
separate(pop_data1, County_State, c("County", "State"), sep=",")
# Data transformation
pop_data1 <- separate(pop_data1, County_State, c("County", "State"), sep=",")
pop_data1 <- pop_data1[, c(1,2,13)]
colnames(pop_data1)[2] <- "Province_State"
colnames(pop_data1)[3] <- "Population_Count_2019"
# Merging county Population_Count data with final data
education_by_county <- read.csv("./data/Education.csv", header = TRUE, sep= ",")
education_by_county <- education_by_county[, c(1,12,13,14,15)]
colnames(education_by_county)[1] <- "FIPS"
final_data <- merge(final_data, education_by_county, by= "FIPS")
write.csv(final_data, "./data/final_data.csv")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(tidyr)
data1 <- read.csv("./data/6-15-2020.csv",header = TRUE, sep= ",")
data2 <- read.csv("./data/7-19-2020.csv",header = TRUE, sep= ",")
data <- merge(data1, data2, by= c("FIPS","Admin2","Province_State","Country_Region","Lat","Long_","Combined_Key"))
mask <- read.csv("./data/Mask Usage.csv",header = TRUE, sep= ",")
final_data <- merge(data,mask,by=c("FIPS"))
colnames(final_data)[2] = "County"
county_gdp <- read.csv("./data/lagdp1219.csv", header = TRUE, sep= ",")
# Get list of all states
states <- read.csv("./data/States.csv", header = TRUE, sep= ",")[,1]
county_gdp$Province_State <- NA
county_gdp[county_gdp[,1] %in% states,"Province_State"] <- county_gdp[county_gdp[,1] %in% states,1]
county_gdp <- fill(county_gdp, Province_State, .direction = "down")
county_gdp <- county_gdp[!(county_gdp[,1] %in% states),]
county_gdp <- county_gdp[, c(1,5,6)]
colnames(county_gdp)[1] <- "County"
colnames(county_gdp)[2] <- "GDP 2018"
final_data <- merge(final_data, county_gdp, by= c("County","Province_State"))
# Reading data on Population_count by county
pop_data1 <- read.csv("./data/population_data.csv",header = TRUE, sep= ",", encoding="UTF-8")
# Data transformation
pop_data1 <- separate(pop_data1, County_State, c("County", "State"), sep=",")
pop_data1 <- pop_data1[, c(1,2,13)]
colnames(pop_data1)[2] <- "Province_State"
colnames(pop_data1)[3] <- "Population_Count_2019"
# Merging county Population_Count data with final data
education_by_county <- read.csv("./data/Education.csv", header = TRUE, sep= ",")
education_by_county <- education_by_county[, c(1,12,13,14,15)]
colnames(education_by_county)[1] <- "FIPS"
final_data <- merge(final_data, education_by_county, by= "FIPS")
write.csv(final_data, "./data/final_data.csv")
# Plotting predictors vs response value
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(ggplot2)
covid_data <- read.csv("./data/final_data.csv", header = TRUE, sep= ",")
ggplot(covid_data, aes(x=GDP.2018, y=Confirmed.y / )) + geom_point()
# Plotting predictors vs response value
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(ggplot2)
covid_data <- read.csv("./data/final_data.csv", header = TRUE, sep= ",")
# Merging county Population_Count data with final data
final_data <- merge(final_data, pop_data1, by= c("County","Province_State"))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(tidyr)
data1 <- read.csv("./data/6-15-2020.csv",header = TRUE, sep= ",")
data2 <- read.csv("./data/7-19-2020.csv",header = TRUE, sep= ",")
data <- merge(data1, data2, by= c("FIPS","Admin2","Province_State","Country_Region","Lat","Long_","Combined_Key"))
mask <- read.csv("./data/Mask Usage.csv",header = TRUE, sep= ",")
final_data <- merge(data,mask,by=c("FIPS"))
colnames(final_data)[2] = "County"
county_gdp <- read.csv("./data/lagdp1219.csv", header = TRUE, sep= ",")
# Get list of all states
states <- read.csv("./data/States.csv", header = TRUE, sep= ",")[,1]
county_gdp$Province_State <- NA
county_gdp[county_gdp[,1] %in% states,"Province_State"] <- county_gdp[county_gdp[,1] %in% states,1]
county_gdp <- fill(county_gdp, Province_State, .direction = "down")
county_gdp <- county_gdp[!(county_gdp[,1] %in% states),]
county_gdp <- county_gdp[, c(1,5,6)]
colnames(county_gdp)[1] <- "County"
colnames(county_gdp)[2] <- "GDP 2018"
final_data <- merge(final_data, county_gdp, by= c("County","Province_State"))
# Reading data on Population_count by county
pop_data1 <- read.csv("./data/population_data.csv",header = TRUE, sep= ",", encoding="UTF-8")
# Data transformation
pop_data1 <- separate(pop_data1, County_State, c("County", "State"), sep=",")
pop_data1 <- pop_data1[, c(1,2,13)]
colnames(pop_data1)[2] <- "Province_State"
colnames(pop_data1)[3] <- "Population_Count_2019"
# Merging county Population_Count data with final data
final_data <- merge(final_data, pop_data1, by= c("County","Province_State"))
education_by_county <- read.csv("./data/Education.csv", header = TRUE, sep= ",")
education_by_county <- education_by_county[, c(1,12,13,14,15)]
colnames(education_by_county)[1] <- "FIPS"
final_data <- merge(final_data, education_by_county, by= "FIPS")
write.csv(final_data, "./data/final_data.csv")
covid_data <- read.csv("./data/final_data.csv", header = TRUE, sep= ",")
ggplot(covid_data, aes(x=GDP.2018, y=Confirmed.y / Population_Count_2019)) + geom_point()
ggplot(covid_data, aes(x=GDP.2018, y=(Confirmed.y / Population_Count_2019))) + geom_point()
ggplot(covid_data, aes(x=GDP.2018, y=(Confirmed.y / Population_Count_2019))) + geom_point()
typeof(covid_data$Confirmed.y)
typeof(covid_data$Population_Count_2019)
as.numeric(covid_data$Population_Count_2019)
as.numeric(gsub(",", "", covid_data$Population_Count_2019))
as.numeric(gsub(",", "", covid_data$Population_Count_2019))
covid_data$Population_Count_2019 = as.numeric(gsub(",", "", covid_data$Population_Count_2019))
as.numeric(gsub(",","", final_data$Population_Count_2019))
final_data$Population_Count_2019 <- as.numeric(gsub(",","", final_data$Population_Count_2019))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(tidyr)
data1 <- read.csv("./data/6-15-2020.csv",header = TRUE, sep= ",")
data2 <- read.csv("./data/7-19-2020.csv",header = TRUE, sep= ",")
data <- merge(data1, data2, by= c("FIPS","Admin2","Province_State","Country_Region","Lat","Long_","Combined_Key"))
mask <- read.csv("./data/Mask Usage.csv",header = TRUE, sep= ",")
final_data <- merge(data,mask,by=c("FIPS"))
colnames(final_data)[2] = "County"
county_gdp <- read.csv("./data/lagdp1219.csv", header = TRUE, sep= ",")
# Get list of all states
states <- read.csv("./data/States.csv", header = TRUE, sep= ",")[,1]
county_gdp$Province_State <- NA
county_gdp[county_gdp[,1] %in% states,"Province_State"] <- county_gdp[county_gdp[,1] %in% states,1]
county_gdp <- fill(county_gdp, Province_State, .direction = "down")
county_gdp <- county_gdp[!(county_gdp[,1] %in% states),]
county_gdp <- county_gdp[, c(1,5,6)]
colnames(county_gdp)[1] <- "County"
colnames(county_gdp)[2] <- "GDP 2018"
final_data <- merge(final_data, county_gdp, by= c("County","Province_State"))
# Reading data on Population_count by county
pop_data1 <- read.csv("./data/population_data.csv",header = TRUE, sep= ",", encoding="UTF-8")
# Data transformation
pop_data1 <- separate(pop_data1, County_State, c("County", "State"), sep=",")
pop_data1 <- pop_data1[, c(1,2,13)]
colnames(pop_data1)[2] <- "Province_State"
colnames(pop_data1)[3] <- "Population_Count_2019"
# Merging county Population_Count data with final data
final_data <- merge(final_data, pop_data1, by= c("County","Province_State"))
final_data$Population_Count_2019 <- as.numeric(gsub(",","", final_data$Population_Count_2019))
education_by_county <- read.csv("./data/Education.csv", header = TRUE, sep= ",")
education_by_county <- education_by_county[, c(1,12,13,14,15)]
colnames(education_by_county)[1] <- "FIPS"
final_data <- merge(final_data, education_by_county, by= "FIPS")
write.csv(final_data, "./data/final_data.csv")
covid_data <- read.csv("./data/final_data.csv", header = TRUE, sep= ",")
ggplot(covid_data, aes(x=GDP.2018, y=(Confirmed.y / Population_Count_2019))) + geom_point()
as.numeric(gsub(",","", final_data$`GDP 2018`))
final_data$`GDP 2018` <- as.numeric(gsub(",","", final_data$`GDP 2018`))
write.csv(final_data, "./data/final_data.csv")
covid_data <- read.csv("./data/final_data.csv", header = TRUE, sep= ",")
ggplot(covid_data, aes(x=GDP.2018, y=(Confirmed.y / Population_Count_2019))) + geom_point()
ggplot(covid_data, aes(x=Percent.of.adults.with.a.bachelor.s.degree.or.higher..2014.18, y=(Confirmed.y / Population_Count_2019))) + geom_point()
lh <- quantile((covid_data$Confirmed.y / covid_data$Population_Count_2019),
probs=0.25, na.rm = TRUE)
rh <- quantile((covid_data$Confirmed.y / covid_data$Population_Count_2019),
probs=0.75, na.rm = TRUE)
ggplot(covid_data[, (covid_data$Confirmed.y / covid_data$Population_Count_2019) < rh], aes(x=GDP.2018, y=(Confirmed.y / Population_Count_2019))) + geom_point()
ggplot(covid_data[(covid_data$Confirmed.y / covid_data$Population_Count_2019) < rh,], aes(x=GDP.2018, y=(Confirmed.y / Population_Count_2019))) + geom_point()
ggplot(covid_data[(covid_data$Confirmed.y / covid_data$Population_Count_2019) < rh_cases & covid_data$GDP.2018 < rh_gdp,], aes(x=GDP.2018, y=(Confirmed.y / Population_Count_2019))) + geom_point()
lh_cases <- quantile((covid_data$Confirmed.y / covid_data$Population_Count_2019),
probs=0.25, na.rm = TRUE)
rh_cases <- quantile((covid_data$Confirmed.y / covid_data$Population_Count_2019),
probs=0.75, na.rm = TRUE)
lh_gdp <- quantile((covid_data$GDP.2018),
probs=0.25, na.rm = TRUE)
rh_gdp <- quantile((covid_data$GDP.2018),
probs=0.75, na.rm = TRUE)
ggplot(covid_data[(covid_data$Confirmed.y / covid_data$Population_Count_2019) < rh_cases & covid_data$GDP.2018 < rh_gdp,], aes(x=GDP.2018, y=(Confirmed.y / Population_Count_2019))) + geom_point()
lh_education <- quantile((covid_data$Percent.of.adults.with.a.bachelor.s.degree.or.higher..2014.18),
probs=0.25, na.rm = TRUE)
rh_education <- quantile((covid_data$Percent.of.adults.with.a.bachelor.s.degree.or.higher..2014.18),
probs=0.75, na.rm = TRUE)
ggplot(covid_data[(covid_data$Confirmed.y / covid_data$Population_Count_2019) < rh_cases & covid_data$GDP.2018 < rh_gdp,], aes(x=Percent.of.adults.with.a.bachelor.s.degree.or.higher..2014.18, y=(Confirmed.y / Population_Count_2019))) + geom_point()
ggplot(covid_data[(covid_data$Confirmed.y / covid_data$Population_Count_2019) < rh_cases], aes(x=Percent.of.adults.with.a.bachelor.s.degree.or.higher..2014.18, y=(Confirmed.y / Population_Count_2019))) + geom_point()
ggplot(covid_data[(covid_data$Confirmed.y / covid_data$Population_Count_2019) < rh_cases,], aes(x=Percent.of.adults.with.a.bachelor.s.degree.or.higher..2014.18, y=(Confirmed.y / Population_Count_2019))) + geom_point()
ggplot(covid_data[(covid_data$Confirmed.y / covid_data$Population_Count_2019) < rh_cases,], aes(x=Percent.of.adults.with.a.bachelor.s.degree.or.higher..2014.18, y=(Confirmed.y / Population_Count_2019))) + geom_point()
function hey () {
return 5
}
function hey () {
return 5
}
function hey() {
return 5
}
function() {
return 5
}
function() {
return(5)
}
function hey() {
return(5)
}
hey <- function() {
return(5)
}
max_quantile <- function(data, max_quantile) {
rh <- quantile(data, probs=max_quantile, na.rm = TRUE)
return(data < rh)
}
ggplot(covid_data[max_quantile((covid_data$Confirmed.y / covid_data$Population_Count_2019), .75) & covid_data$GDP.2018 < rh_gdp,], aes(x=GDP.2018, y=(Confirmed.y / Population_Count_2019))) + geom_point()
+ geom_point()
ggplot(
covid_data[
max_quantile((covid_data$Confirmed.y / covid_data$Population_Count_2019), .75)
& max_quantile(covid_data$GDP.2018, 0.75),],
aes(x=GDP.2018, y=(Confirmed.y / Population_Count_2019)))
+ geom_point()
+ geom_point()
ggplot(
covid_data[
max_quantile((covid_data$Confirmed.y / covid_data$Population_Count_2019), .75)
& max_quantile(covid_data$GDP.2018, 0.75),],
aes(x=GDP.2018, y=(Confirmed.y / Population_Count_2019)))
ggplot(
covid_data[
max_quantile((covid_data$Confirmed.y / covid_data$Population_Count_2019), .75)
& max_quantile(covid_data$GDP.2018, 0.75),],
aes(x=GDP.2018, y=(Confirmed.y / Population_Count_2019)))
+ geom_point()
& max_quantile(covid_data$GDP.2018, 0.75),],
aes(x=GDP.2018, y=(Confirmed.y / Population_Count_2019))) +
geom_point()
& max_quantile(covid_data$GDP.2018, 0.75),],
aes(x=GDP.2018, y=(Confirmed.y / Population_Count_2019))) +
geom_point()
ggplot(
covid_data[
max_quantile((covid_data$Confirmed.y / covid_data$Population_Count_2019), .75)
& max_quantile(covid_data$GDP.2018, 0.75),],
aes(x=GDP.2018, y=(Confirmed.y / Population_Count_2019))) +
geom_point()
& max_quantile(covid_data$GDP.2018, 0.75),],
aes(x=GDP.2018, y=(Confirmed.y / Population_Count_2019))) + geom_point()
& max_quantile(covid_data$GDP.2018, 0.75),],
aes(x=GDP.2018, y=(Confirmed.y / Population_Count_2019))) + geom_point()
& max_quantile(covid_data$GDP.2018, 0.75),],
aes(x=GDP.2018, y=(Confirmed.y / Population_Count_2019))) +
geom_point()
ggplot(
covid_data[
max_quantile((covid_data$Confirmed.y / covid_data$Population_Count_2019), .75)
& max_quantile(covid_data$GDP.2018, 0.75),],
aes(x=GDP.2018, y=(Confirmed.y / Population_Count_2019))) +
geom_point()
ggplot(
covid_data[
max_quantile((covid_data$Confirmed.y / covid_data$Population_Count_2019))
& max_quantile(covid_data$GDP.2018),],
aes(x=GDP.2018, y=(Confirmed.y / Population_Count_2019))) +
geom_point()
max_quantile <- function(data, max_quantile=0.75) {
rh <- quantile(data, probs=max_quantile, na.rm = TRUE)
return(data < rh)
}
ggplot(
covid_data[
max_quantile((covid_data$Confirmed.y / covid_data$Population_Count_2019))
& max_quantile(covid_data$GDP.2018),],
aes(x=GDP.2018, y=(Confirmed.y / Population_Count_2019))) +
geom_point()
ggplot(
covid_data[max_quantile(covid_data$Confirmed.y / covid_data$Population_Count_2019)],
aes(
x=Percent.of.adults.with.a.bachelor.s.degree.or.higher..2014.18,
y=(Confirmed.y / Population_Count_2019))) +
geom_point()
ggplot(
covid_data[max_quantile(covid_data$Confirmed.y / covid_data$Population_Count_2019)],
aes(
x=Percent.of.adults.with.a.bachelor.s.degree.or.higher..2014.18,
y=(Confirmed.y / Population_Count_2019))) +
geom_point()
ggplot(
covid_data[max_quantile(covid_data$Confirmed.y / covid_data$Population_Count_2019)],
aes(
x=Percent.of.adults.with.a.bachelor.s.degree.or.higher..2014.18,
y=(Confirmed.y / Population_Count_2019))) +
geom_point()
ggplot(
covid_data[max_quantile((covid_data$Confirmed.y) / (covid_data$Population_Count_2019))],
aes(
x=Percent.of.adults.with.a.bachelor.s.degree.or.higher..2014.18,
y=(Confirmed.y / Population_Count_2019))) +
geom_point()
ggplot(
covid_data[max_quantile((covid_data$Confirmed.y / covid_data$Population_Count_2019))],
aes(
x=Percent.of.adults.with.a.bachelor.s.degree.or.higher..2014.18,
y=(Confirmed.y / Population_Count_2019))) +
geom_point()
ggplot(
covid_data[
max_quantile((covid_data$Confirmed.y / covid_data$Population_Count_2019)),],
aes(
x=Percent.of.adults.with.a.bachelor.s.degree.or.higher..2014.18,
y=(Confirmed.y / Population_Count_2019))) +
geom_point()
ggplot(
covid_data[
max_quantile((covid_data$Confirmed.y / covid_data$Population_Count_2019))
& max_quantile(covid_data$GDP.2018),],
aes(x=GDP.2018, y=(Confirmed.y / Population_Count_2019))) +
geom_point()
ggplot(
covid_data[
max_quantile((covid_data$Confirmed.y / covid_data$Population_Count_2019)),],
aes(
x=Percent.of.adults.with.a.bachelor.s.degree.or.higher..2014.18,
y=(Confirmed.y / Population_Count_2019))) +
geom_point()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(tidyr)
data1 <- read.csv("./data/6-15-2020.csv",header = TRUE, sep= ",")
data2 <- read.csv("./data/7-19-2020.csv",header = TRUE, sep= ",")
data <- merge(data1, data2, by= c("FIPS","Admin2","Province_State","Country_Region","Lat","Long_","Combined_Key"))
mask <- read.csv("./data/Mask Usage.csv",header = TRUE, sep= ",")
final_data <- merge(data,mask,by=c("FIPS"))
colnames(final_data)[2] = "County"
county_gdp <- read.csv("./data/lagdp1219.csv", header = TRUE, sep= ",")
# Get list of all states
states <- read.csv("./data/States.csv", header = TRUE, sep= ",")[,1]
county_gdp$Province_State <- NA
county_gdp[county_gdp[,1] %in% states,"Province_State"] <- county_gdp[county_gdp[,1] %in% states,1]
county_gdp <- fill(county_gdp, Province_State, .direction = "down")
county_gdp <- county_gdp[!(county_gdp[,1] %in% states),]
county_gdp <- county_gdp[, c(1,5,6)]
colnames(county_gdp)[1] <- "County"
colnames(county_gdp)[2] <- "GDP 2018"
final_data <- merge(final_data, county_gdp, by= c("County","Province_State"))
# Reading data on Population_count by county
pop_data1 <- read.csv("./data/population_data.csv",header = TRUE, sep= ",", encoding="UTF-8")
# Data transformation
pop_data1 <- separate(pop_data1, County_State, c("County", "State"), sep=",")
pop_data1 <- pop_data1[, c(1,2,13)]
colnames(pop_data1)[2] <- "Province_State"
colnames(pop_data1)[3] <- "Population_Count_2019"
# Merging county Population_Count data with final data
final_data <- merge(final_data, pop_data1, by= c("County","Province_State"))
final_data$Population_Count_2019 <- as.numeric(gsub(",","", final_data$Population_Count_2019))
final_data$`GDP 2018` <- as.numeric(gsub(",","", final_data$`GDP 2018`))
education_by_county <- read.csv("./data/Education.csv", header = TRUE, sep= ",")
education_by_county <- education_by_county[, c(1,12,13,14,15)]
colnames(education_by_county)[1] <- "FIPS"
final_data <- merge(final_data, education_by_county, by= "FIPS")
write.csv(final_data, "./data/final_data.csv")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(ggplot2)
max_quantile <- function(data, max_quantile=0.75) {
"
Function return indexes of data below max_quantile
"
rh <- quantile(data, probs=max_quantile, na.rm = TRUE)
return(data < rh)
}
covid_data <- read.csv("./data/final_data.csv", header = TRUE, sep= ",")
ggplot(
covid_data[
max_quantile((covid_data$Confirmed.y / covid_data$Population_Count_2019))
& max_quantile(covid_data$GDP.2018),],
aes(x=GDP.2018, y=(Confirmed.y / Population_Count_2019))) +
geom_point()
ggplot(
covid_data[
max_quantile((covid_data$Confirmed.y / covid_data$Population_Count_2019)),],
aes(
x=Percent.of.adults.with.a.bachelor.s.degree.or.higher..2014.18,
y=(Confirmed.y / Population_Count_2019))) +
geom_point()
avg_age <- read.csv("./data/AvgAge.csv", header=TRUE, sep=",")
View(avg_age)
avg_age <- read.csv("./data/AvgAge.csv", header=TRUE, sep=",")[,1]
avg_age <- read.csv("./data/AvgAge.csv", header=TRUE, sep=",")[1:,]
avg_age <- read.csv("./data/AvgAge.csv", header=TRUE, sep=",")
avg_age <- read.csv("./data/MedianAge.csv", header=TRUE, sep=",")
avg_age <- read.csv("./data/MedianAge.csv", header=TRUE, sep=",")[1:1000,]
avg_age <- avg_age[2:size(avg_age)]
length(avg_age)
avg_age <- read.csv("./data/MedianAge.csv", header=TRUE, sep=",")
avg_age <- avg_age[2:nrow(avg_age)]
avg_age <- read.csv("./data/MedianAge.csv", header=TRUE, sep=",")
avg_age <- avg_age[2:nrow(avg_age),]
avg_age[avg_age$GEONAME %like% "County"]
avg_age[contains(avg_age$GEONAME, "County")]
avg_age[grepl(avg_age$GEONAME, "County")]
avg_age[grepl("County", avg_age$GEONAME)]
avg_age <- read.csv("./data/MedianAge.csv", header=TRUE, sep=",")
avg_age <- avg_age[2:nrow(avg_age),]
avg_age[grepl("County", avg_age$GEONAME)]
avg_age[contains("County", avg_age$GEONAME)]
install.packages("data.table")
library("data.table")
library(data.table)
install.packages("data.table")
grep("County", avg_age$GEONAME)
avg_age[grep("County", avg_age$GEONAME)]
avg_age[grep("County", avg_age$GEONAME),]
avg_age <- avg_age[grep("County", avg_age$GEONAME),]
str_remove
install.packages("stringr")
library(stringr)
str_remove(avg_age$GEONAME, "County")
str_remove(avg_age$GEONAME, "County ")
str_remove(avg_age$GEONAME, " County")
separate(avg_age, GEONAME, c("County", "State"), sep=", ")
avg_age <- read.csv("./data/MedianAge.csv", header=TRUE, sep=",")
avg_age <- avg_age[2:nrow(avg_age),]
avg_age <- avg_age[grep("County", avg_age$GEONAME),]
avg_age <- str_remove(avg_age$GEONAME, " County")
separate(avg_age, GEONAME, c("County", "State"), sep=", ")
avg_age <- read.csv("./data/MedianAge.csv", header=TRUE, sep=",")
avg_age <- avg_age[2:nrow(avg_age),]
avg_age <- avg_age[grep("County", avg_age$GEONAME),]
avg_age <- str_remove(avg_age$GEONAME, " County")
avg_age <- read.csv("./data/MedianAge.csv", header=TRUE, sep=",")
avg_age <- avg_age[2:nrow(avg_age),]
avg_age <- avg_age[grep("County", avg_age$GEONAME),]
avg_age$GEONAME <- str_remove(avg_age$GEONAME, " County")
separate(avg_age, GEONAME, c("County", "State"), sep=", ")
avg_age <- separate(avg_age, GEONAME, c("County", "State"), sep=", ")
colnames(avg_age)[6] <- "Median Age"
final_data <- merge(final_data, avg_age[, c(3,4,6)], by="Median Age")
avg_age <- read.csv("./data/MedianAge.csv", header=TRUE, sep=",")
avg_age <- avg_age[2:nrow(avg_age),]
avg_age <- avg_age[grep("County", avg_age$GEONAME),]
avg_age$GEONAME <- str_remove(avg_age$GEONAME, " County")
avg_age <- separate(avg_age, GEONAME, c("County", "Province State"), sep=", ")
colnames(avg_age)[6] <- "Median Age"
final_data <- merge(final_data, avg_age[, c(3,4,6)], by=c("County", "State"))
final_data <- merge(final_data, avg_age[, c(3,4,6)], by=c("County", "Province State"))
final_data <- merge(final_data, avg_age[, c(3,4,6)], by=c("County", "Province State"))
final_data <- merge(final_data, avg_age[, c(3,4,6)], by=c("County", "Province State"))
final_data <- merge(final_data, avg_age[, c(3,4,6)], by=c("County", "Province State"))
final_data <- merge(final_data, avg_age[, c(3,4,6)], by=c("County", "Province State"))
avg_age <- read.csv("./data/MedianAge.csv", header=TRUE, sep=",")
avg_age <- avg_age[2:nrow(avg_age),]
avg_age <- avg_age[grep("County", avg_age$GEONAME),]
avg_age$GEONAME <- str_remove(avg_age$GEONAME, " County")
avg_age <- separate(avg_age, GEONAME, c("County", "Province_State"), sep=", ")
colnames(avg_age)[6] <- "Median Age"
final_data <- merge(final_data, avg_age[, c(3,4,6)], by=c("County", "Province_State"))
write.csv(final_data, "./data/final_data.csv")
covid_data <- read.csv("./data/final_data.csv", header = TRUE, sep= ",")
ggplot(
covid_data[
max_quantile((covid_data$Confirmed.y / covid_data$Population_Count_2019)),],
aes(
x='Median Age',
y=(Confirmed.y / Population_Count_2019))) +
geom_point()
ggplot(
covid_data[
max_quantile((covid_data$Confirmed.y / covid_data$Population_Count_2019)),],
aes(
x=Median Age,
y=(Confirmed.y / Population_Count_2019))) +
geom_point()
ggplot(
covid_data[
max_quantile((covid_data$Confirmed.y / covid_data$Population_Count_2019)),],
aes(
x=Median Age,
y=(Confirmed.y / Population_Count_2019))) +
geom_point()
colnames(avg_age)[6] <- "Median_Age"
final_data <- merge(final_data, avg_age[, c(3,4,6)], by=c("County", "Province_State"))
write.csv(final_data, "./data/final_data.csv")
covid_data <- read.csv("./data/final_data.csv", header = TRUE, sep= ",")
ggplot(
covid_data[
max_quantile((covid_data$Confirmed.y / covid_data$Population_Count_2019)),],
aes(
x=Median_Age,
y=(Confirmed.y / Population_Count_2019))) +
geom_point()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(tidyr)
library(stringr)
data1 <- read.csv("./data/6-15-2020.csv",header = TRUE, sep= ",")
data2 <- read.csv("./data/7-19-2020.csv",header = TRUE, sep= ",")
data <- merge(data1, data2, by= c("FIPS","Admin2","Province_State","Country_Region","Lat","Long_","Combined_Key"))
mask <- read.csv("./data/Mask Usage.csv",header = TRUE, sep= ",")
final_data <- merge(data,mask,by=c("FIPS"))
colnames(final_data)[2] = "County"
county_gdp <- read.csv("./data/lagdp1219.csv", header = TRUE, sep= ",")
# Get list of all states
states <- read.csv("./data/States.csv", header = TRUE, sep= ",")[,1]
county_gdp$Province_State <- NA
county_gdp[county_gdp[,1] %in% states,"Province_State"] <- county_gdp[county_gdp[,1] %in% states,1]
county_gdp <- fill(county_gdp, Province_State, .direction = "down")
county_gdp <- county_gdp[!(county_gdp[,1] %in% states),]
county_gdp <- county_gdp[, c(1,5,6)]
colnames(county_gdp)[1] <- "County"
colnames(county_gdp)[2] <- "GDP 2018"
final_data <- merge(final_data, county_gdp, by= c("County","Province_State"))
# Reading data on Population_count by county
pop_data1 <- read.csv("./data/population_data.csv",header = TRUE, sep= ",", encoding="UTF-8")
# Data transformation
pop_data1 <- separate(pop_data1, County_State, c("County", "State"), sep=",")
pop_data1 <- pop_data1[, c(1,2,13)]
colnames(pop_data1)[2] <- "Province_State"
colnames(pop_data1)[3] <- "Population_Count_2019"
# Merging county Population_Count data with final data
final_data <- merge(final_data, pop_data1, by= c("County","Province_State"))
final_data$Population_Count_2019 <- as.numeric(gsub(",","", final_data$Population_Count_2019))
final_data$`GDP 2018` <- as.numeric(gsub(",","", final_data$`GDP 2018`))
education_by_county <- read.csv("./data/Education.csv", header = TRUE, sep= ",")
education_by_county <- education_by_county[, c(1,12,13,14,15)]
colnames(education_by_county)[1] <- "FIPS"
final_data <- merge(final_data, education_by_county, by= "FIPS")
avg_age <- read.csv("./data/MedianAge.csv", header=TRUE, sep=",")
avg_age <- avg_age[2:nrow(avg_age),]
avg_age <- avg_age[grep("County", avg_age$GEONAME),]
avg_age$GEONAME <- str_remove(avg_age$GEONAME, " County")
avg_age <- separate(avg_age, GEONAME, c("County", "Province_State"), sep=", ")
colnames(avg_age)[6] <- "Median_Age"
final_data <- merge(final_data, avg_age[, c(3,4,6)], by=c("County", "Province_State"))
write.csv(final_data, "./data/final_data.csv")
View(avg_age)
