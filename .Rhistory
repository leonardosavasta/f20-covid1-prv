confint.lm(lm.fit)
lm.fit
lm.fit.lstat
lm.fit$lstat
lm.fit
lm.fit[]
lm.fit
typeof(lm.fit)
lm.fit[0]
lm.fit[1]
lm.fit[1]
lm.fit[2]
lm.fit
View(lm.fit)
lm.fit[1]
lm.fit[1][0]
lm.fit[1][1]
lm.fit[1][2]
lm.fit[1][1][1]
lm.fit['coefficients']
lm.fit['coefficients']['lstat']
typeof(lm.fit['coefficients'])
typeof(lm.fit['coefficients'][0]
typeof(lm.fit['coefficients'][0])
typeof(lm.fit['coefficients'][0])
typeof(lm.fit['coefficients'][1])
lm.fit
print(34.55 + 5 * (-0.95))
print(34.55 + 10 * (-0.95))
print(34.55 + 15 * (-0.95))
predict(lm.fit, data.frame(lstat = c(5, 10, 15)), interval = "confidence")
plot(lstat, medv) abline(lm.fit)
plot(lstat, medv)
plot(lstat, medv)
plot(lstat, medv) + abline(lm.fit)
plot(lstat, medv) + abline(lm.fit, lwd=3, col="red")
plot(lstat, medv) + abline(lm.fit, lwd=10, col="red")
plot(lstat, medv) + abline(lm.fit, lwd=3, col="red")
plot(lstat, medv, pch=20) + abline(lm.fit, lwd=3, col="red")
plot(lstat, medv, pch=10) + abline(lm.fit, lwd=3, col="red")
plot(1:20)
plot(1:20, 1:20, pch=1:20)
plot(lm.fit)
ggplot(Boston, aes(x=lstat, y=medv)) + geom_point() + geom_smooth(method="lm")
library(ggplot2)
library(ISLR)
install.packages('ISLR')
library(ISLR)
ggplot(Boston, aes(x=age, y=medv)) + geom_point()
ggplot(Boston, aes(x=nox, y=medv)) + geom_point()
ggplot(Boston, aes(x=indus, y=medv)) + geom_point()
ggplot(Boston, aes(x=crim, y=medv)) + geom_point()
ggplot(Boston, aes(x=black, y=medv)) + geom_point()
ggplot(Boston, aes(x=ptratio, y=medv)) + geom_point()
ggplot(Boston, aes(x=dis, y=medv)) + geom_point()
summary(Auto)
?Auto
ggplot(Auto, aes(x=horsepower, y=mpg)) + geom_point()
lm.fit <- lm(mpg <- horsepower)
lm.fit <- lm(mpg ~ horsepower)
attach(Auto)
lm.fit <- lm(mpg ~ horsepower)
summary(lm.fit)
View(Auto)
?Boston
ggplot(Boston, aes(x=lstat, y=medv)) + geom_point() + geom_smooth(method="lm")
ggplot(Boston, aes(x=crim, y=medv)) + geom_point() + geom_smooth(method="lm")
ggplot(Boston, aes(x=nox, y=medv)) + geom_point() + geom_smooth(method="lm")
ggplot(Boston, aes(x=nox, y=lsat)) + geom_point() + geom_smooth(method="lm")
ggplot(Boston, aes(x=nox, y=lstat)) + geom_point() + geom_smooth(method="lm")
lm.fit <- lm(mpg ~ horsepower)
summary(lm.fit)
predict(lm.fit, data.frame(horsepower=c(120,200,300))
predict(lm.fit, data.frame(horsepower=c(120,200,300)))
predict(lm.fit, data.frame(horsepower=c(120,200,300)))
ggplot(Auto, aes(x=horsepower, y=mpg)) + geom_smooth(method='lm')
ggplot(Auto, aes(x=horsepower, y=mpg)) + geom_point() +  geom_smooth(method='lm')
View(Auto)
?Auto
ggplot(Auto, aes(x=horsepower, y=mpg)) + geom_point() +  geom_smooth(method='lm')
library(ISLR)
library(Default)
summary(Default)
attach(Default)
summary(Default)
m.balance <- glm(default ~ balance,, family = binomial)
summary(m.balance)
m.balance <- glm(default ~ balance,, family = binomial)
m.balance <- glm(default = balance,, family = binomial)
m.balance <- glm(default ~ balance,, family = binomial)
summary(m.balance)
pred.data <- data.frame(balance=c(1000,2000,3000))
predict(m.balance, pred.data, type="response")
m <- glm(default ~ balance + income + student, family = binomial)
summary(m)
predict(m, pred.data, type="response")
pred.data <- data.frame(balance=c(1000,2000,3000), income=1000, student="No")
predict(m, pred.data, type="response")
pred.data <- data.frame(balance=c(1000,2000,3000), income=1000, student="Yes")
predict(m, pred.data, type="response")
pred.data <- data.frame(balance=c(1000,2000,3000), income=4000, student="Yes")
predict(m, pred.data, type="response")
pred.data <- data.frame(balance=c(1000,2000,3000), income=4000, student="No")
predict(m, pred.data, type="response")
pred.probs <- predict(m, type="response")
View(pred.data)
pred.default < rep("No", nrow(Default))
pred.default <- rep("No", nrow(Default))
pred.default[pred.probs > 0.5] <- "Yes"
confusion.matrix <- table(default, pred.default)
print(confusion.matrix)
print(addmargins(confusion.matrix))
m.balance <- glm(default ~ balance,, family = binomial)
summary(m.balance)
pred.data <- data.frame(balance=c(1000,2000,3000))
predict(m.balance, pred.data, type="response")
library(ISLR)
attach(Default)
summary(Default)
m.balance <- glm(default ~ balance,, family = binomial)
summary(m.balance)
pred.data <- data.frame(balance=c(1000,2000,3000))
predict(m.balance, pred.data, type="response")
m <- glm(default ~ balance + income + student, family = binomial)
summary(m)
pred.data <- data.frame(balance=c(1000,2000,3000), income=4000, student="No")
predict(m, pred.data, type="response")
pred.probs <- predict(m, type="response")
pred.default <- rep("No", nrow(Default))
pred.default[pred.probs > 0.5] <- "Yes"
confusion.matrix <- table(default, pred.default)
print(addmargins(confusion.matrix))
clean_outliers <- function(data) {
"
Function cleans outliers from data
"
outliers <- boxplot.stats(data)$out
return(!(data %in% outliers))
}
# Plotting predictors vs response value
library(ggplot2)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
clean_outliers <- function(data) {
"
Function cleans outliers from data
"
outliers <- boxplot.stats(data)$out
return(!(data %in% outliers))
}
covid_data <- read.csv("./data/final_data.csv", header = TRUE, sep= ",")
cor(covid_data$Covid_Infection_Rate_count, covid_data$Population_Count_2019)
cor(covid_data$Covid_Infection_Rate_count, covid_data$ALWAYS)
cor(covid_data$Covid_Infection_Rate_count, covid_data$NEVER)
cor(covid_data$Covid_Infection_Rate_count, covid_data$SOMETIMES)
cor(covid_data$Covid_Infection_Rate_count, covid_data$FREQUENTLY)
cor(as.numeric(as.character(covid_data$Median_Household_Income)), covid_data$Covid_Infection_Rate_count)
cor(as.numeric(as.character(covid_data$Median_AGE)), covid_data$Covid_Infection_Rate_count)
ggplot(
covid_data,
aes(
x=Covid_Infection_Rate
)
) +
geom_histogram()
ggplot(
covid_data[clean_outliers(covid_data$Covid_Infection_Rate),],
aes(
x=Covid_Infection_Rate
)
) +
geom_histogram(color="blue")
ggplot(
covid_data[
clean_outliers(covid_data$Covid_Infection_Rate),],
aes(
x=Median_Age,
y=Covid_Infection_Rate)) +
geom_point()
ggplot(
covid_data[
clean_outliers(covid_data$Covid_Infection_Rate)
& clean_outliers(covid_data$Median_Household_Income),],
aes(x=Median_Household_Income, y=Covid_Infection_Rate)) +
geom_point()
ggplot(
covid_data[clean_outliers(covid_data$Covid_Infection_Rate),],
aes(
x=Covid_Infection_Rate
)
) +
geom_histogram(color="blue")
ggplot(
covid_data[
clean_outliers(covid_data$Covid_Infection_Rate)
& clean_outliers(covid_data$Median_Household_Income),],
aes(x=Median_Household_Income, y=Covid_Infection_Rate)) +
geom_point()
ggplot(
covid_data[
clean_outliers(covid_data$Covid_Infection_Rate),],
aes(
x=high_school_diploma,
y=Covid_Infection_Rate)) +
geom_point()
ggplot(
covid_data[
clean_outliers(covid_data$Covid_Infection_Rate),],
aes(
x=high_school_diploma+associate_degree+bachelors_degree,
y=Covid_Infection_Rate)) +
geom_point()
ggplot(
covid_data[
clean_outliers(covid_data$Covid_Infection_Rate),],
aes(
x=high_school_diploma+associate_degree+bachelor_degree,
y=Covid_Infection_Rate)) +
geom_point()
ggplot(
covid_data[
clean_outliers(covid_data$Covid_Infection_Rate),],
aes(
x=associate_degree+bachelor_degree,
y=Covid_Infection_Rate)) +
geom_point()
cor(covid_data$Covid_Infection_Rate_count, covid_data$Population_Count_2019)
cor(covid_data$Covid_Infection_Rate_count, covid_data$ALWAYS)
cor(covid_data$Covid_Infection_Rate_count, covid_data$NEVER)
cor(covid_data$Covid_Infection_Rate_count, covid_data$SOMETIMES)
cor(covid_data$Covid_Infection_Rate_count, covid_data$FREQUENTLY)
cor(covid_data$Covid_Infection_Rate_count, covid_data$ALWAYS)
cor(covid_data$Covid_Infection_Rate_count, covid_data$NEVER)
cor(covid_data$Covid_Infection_Rate_count, covid_data$SOMETIMES)
cor(covid_data$Covid_Infection_Rate_count, covid_data$FREQUENTLY)
cor(as.numeric(as.character(covid_data$Median_Household_Income)), covid_data$Covid_Infection_Rate_count)
cor(as.numeric(as.character(covid_data$Median_AGE)), covid_data$Covid_Infection_Rate_count)
cor(as.numeric(as.character(covid_data$Median_Age)), covid_data$Covid_Infection_Rate_count)
ggplot(
covid_data[
clean_outliers(covid_data$Covid_Infection_Rate) &
clean_outliers(covid_data$Population_Count_2019),],
aes(x=Population_Count_2019, y=Covid_Infection_Rate)) +
geom_point()
ggplot(
covid_data[
clean_outliers(covid_data$Covid_Infection_Rate) &
clean_outliers(covid_data$Population_Count_2019),],
aes(x=ALWAYS, y=Covid_Infection_Rate)) +
geom_point()
ggplot(
covid_data[
clean_outliers(covid_data$Covid_Infection_Rate) &
clean_outliers(covid_data$Population_Count_2019),],
aes(x=SOMETIMES, y=Covid_Infection_Rate)) +
geom_point()
ggplot(
covid_data[
clean_outliers(covid_data$Covid_Infection_Rate) &
clean_outliers(covid_data$Population_Count_2019),],
aes(x=NEVER, y=Covid_Infection_Rate)) +
geom_point()
ggplot(
covid_data[
clean_outliers(covid_data$Covid_Infection_Rate) &
clean_outliers(covid_data$Population_Count_2019),],
aes(x=FREQUENTLY, y=Covid_Infection_Rate)) +
geom_point()
ggplot(
covid_data[
clean_outliers(covid_data$Covid_Infection_Rate) &
clean_outliers(covid_data$Population_Count_2019),],
aes(x=FREQUENTLY | ALWAYS, y=Covid_Infection_Rate)) +
geom_point()
ggplot(
covid_data[
clean_outliers(covid_data$Covid_Infection_Rate) &
clean_outliers(covid_data$Population_Count_2019),],
aes(x=FREQUENTLY + ALWAYS, y=Covid_Infection_Rate)) +
geom_point()
clean_outliers(covid_data$Covid_Infection_Rate) &
clean_outliers(covid_data$Population_Count_2019),],
aes(x=FREQUENTLY + ALWAYS + SOMETIMES, y=Covid_Infection_Rate)) +
geom_point()
ggplot(
covid_data[
clean_outliers(covid_data$Covid_Infection_Rate) &
clean_outliers(covid_data$Population_Count_2019),],
aes(x=FREQUENTLY + ALWAYS + SOMETIMES, y=Covid_Infection_Rate)) +
geom_point()
ggplot(
covid_data[
clean_outliers(covid_data$Covid_Infection_Rate) &
clean_outliers(covid_data$Population_Count_2019),],
aes(x=FREQUENTLY + ALWAYS, y=Covid_Infection_Rate)) +
geom_point()
ggplot(
covid_data[
clean_outliers(covid_data$Covid_Infection_Rate) &
clean_outliers(covid_data$Population_Count_2019),],
aes(x=FREQUENTLY + ALWAYS, y=Covid_Infection_Rate)) +
geom_point() +
ggtitle("Usage of Masks vs Covid Infection Rate") +
xlab("% of population that always/freq. wears masks") + ylab("Covid infection rate")
ggplot(
covid_data[
clean_outliers(covid_data$Covid_Infection_Rate) &
clean_outliers(covid_data$Population_Count_2019),],
aes(x=FREQUENTLY + ALWAYS, y=Covid_Infection_Rate)) +
geom_point() +
ggtitle("Usage of Masks vs Covid Infection Rate") +
xlab("Ratio of population that always/freq. wears masks") + ylab("Covid infection rate")
ggplot(
covid_data[clean_outliers(covid_data$Covid_Infection_Rate),],
aes(
x=Covid_Infection_Rate
)
) +
geom_histogram(color="blue") +
scale_fill_gradient(low="blue", high="red")
ggplot(
covid_data[clean_outliers(covid_data$Covid_Infection_Rate),],
aes(
x=Covid_Infection_Rate
)
) +
geom_histogram() +
scale_fill_gradient(low="blue", high="red")
ggplot(
covid_data[clean_outliers(covid_data$Covid_Infection_Rate),],
aes(
x=Covid_Infection_Rate
)
) +
geom_histogram(fill=count) +
scale_fill_gradient(low="blue", high="red")
ggplot(
covid_data[clean_outliers(covid_data$Covid_Infection_Rate),],
aes(
x=Covid_Infection_Rate
)
) +
geom_histogram(fill=..count..) +
scale_fill_gradient(low="blue", high="red")
ggplot(
covid_data[clean_outliers(covid_data$Covid_Infection_Rate),],
aes(
x=Covid_Infection_Rate
)
) +
geom_histogram(fill=..count..) +scale_color_gradient(low="blue", high="red")
ggplot(
covid_data[clean_outliers(covid_data$Covid_Infection_Rate),],
aes(
x=Covid_Infection_Rate
)
) +
geom_histogram() +scale_color_gradient(low="blue", high="red")
ggplot(
covid_data[clean_outliers(covid_data$Covid_Infection_Rate),],
aes(
x=Covid_Infection_Rate
)
) +
geom_histogram(fill = z1) +scale_color_gradient(low="yellow", high="red")
ggplot(
covid_data[clean_outliers(covid_data$Covid_Infection_Rate),],
aes(
x=Covid_Infection_Rate
)
) +
geom_histogram(fill = count) +scale_color_gradient(low="yellow", high="red")
ggplot(
covid_data[clean_outliers(covid_data$Covid_Infection_Rate),],
aes(
x=Covid_Infection_Rate
)
) +
geom_histogram(fill = y) +scale_color_gradient(low="yellow", high="red")
ggplot(
covid_data[clean_outliers(covid_data$Covid_Infection_Rate),],
aes(
x=Covid_Infection_Rate
)
) +
geom_histogram(aes(fill = y)) +scale_color_gradient(low="yellow", high="red")
ggplot(
covid_data[clean_outliers(covid_data$Covid_Infection_Rate),],
aes(
x=Covid_Infection_Rate
)
) +
geom_histogram(aes(fill = count)) +scale_color_gradient(low="yellow", high="red")
ggplot(
covid_data[clean_outliers(covid_data$Covid_Infection_Rate),],
aes(
x=Covid_Infection_Rate
)
) +
geom_histogram() +scale_color_gradient(low="yellow", high="red")
ggplot(
covid_data[clean_outliers(covid_data$Covid_Infection_Rate),],
aes(
x=Covid_Infection_Rate
)
) +
geom_histogram(aes(fill=..count..)) +scale_color_gradient(low="yellow", high="red")
ggplot(
covid_data[clean_outliers(covid_data$Covid_Infection_Rate),],
aes(
x=Covid_Infection_Rate
)
) +
geom_histogram(aes(fill=..count..), col="red") + scale_color_gradient(low="yellow", high="red")
ggplot(
covid_data[clean_outliers(covid_data$Covid_Infection_Rate),],
aes(
x=Covid_Infection_Rate
)
) +
geom_histogram(aes(fill=..count..))
ggplot(
covid_data[clean_outliers(covid_data$Covid_Infection_Rate),],
aes(
x=Covid_Infection_Rate
)
) +
geom_histogram(aes(fill=..count..)) +
ggtitle("Distribution of Covid Infection Rate per County") +
xlab("Covid Invection Rate") + ylab("Count")
ggplot(
covid_data[
clean_outliers(covid_data$Covid_Infection_Rate) &
clean_outliers(covid_data$Population_Count_2019),],
aes(x=FREQUENTLY + ALWAYS, y=Covid_Infection_Rate)) +
geom_point() +
ggtitle("Usage of Masks vs Covid Infection Rate") +
xlab("Ratio of population that always/freq. wears masks") + ylab("Covid infection rate")
ggplot(
covid_data[
clean_outliers(covid_data$Covid_Infection_Rate) &
clean_outliers(covid_data$Population_Count_2019),],
aes(x=FREQUENTLY + ALWAYS, y=Covid_Infection_Rate)) +
geom_point() +
ggtitle("Mask USAGE vs Covid Infection Rate") +
xlab("Ratio of population that always/freq. wears masks") + ylab("Covid infection rate")
ggplot(
covid_data[
clean_outliers(covid_data$Covid_Infection_Rate) &
clean_outliers(covid_data$Population_Count_2019),],
aes(x=FREQUENTLY + ALWAYS, y=Covid_Infection_Rate)) +
geom_point() +
ggtitle("Mask Usage vs Covid Infection Rate") +
xlab("Ratio of population that always/freq. wears masks") + ylab("Covid infection rate")
ggplot(
covid_data[
clean_outliers(covid_data$Covid_Infection_Rate) &
clean_outliers(covid_data$Population_Count_2019),],
aes(x=FREQUENTLY + ALWAYS, y=Covid_Infection_Rate)) +
geom_point() +
ggtitle("Mask Usage vs Covid Infection Rate") +
xlab("Ratio of population that always/freq. wears masks") + ylab("Covid infection rate")
ggplot(
covid_data[
clean_outliers(covid_data$Covid_Infection_Rate) &
clean_outliers(covid_data$Population_Count_2019),],
aes(x=Population_Count_2019, y=Covid_Infection_Rate)) +
geom_point() +
ggtitle("Population per County vs Covid Infection Rate") +
xlab("County population") + ylab("Covid infection rate")
ggplot(
covid_data[
clean_outliers(covid_data$Covid_Infection_Rate) &
clean_outliers(covid_data$Population_Count_2019),],
aes(x=Population_Count_2019, y=Covid_Infection_Rate)) +
geom_point() +
ggtitle("County Population vs Covid Infection Rate") +
xlab("County population") + ylab("Covid infection rate")
ggplot(
covid_data[
clean_outliers(covid_data$Covid_Infection_Rate),],
aes(
x=Median_Age,
y=Covid_Infection_Rate)) +
geom_point() +
ggtitle("County Median Age vs Covid Infection Rate") +
xlab("County median age") + ylab("Covid infection rate")
ggplot(
covid_data[
clean_outliers(covid_data$Covid_Infection_Rate),],
aes(
x=associate_degree+bachelor_degree,
y=Covid_Infection_Rate)) +
geom_point() +
ggtitle("Ratio of Population With Associate Degree or Higher vs Covid Infection Rate") +
xlab("Ratio of Population With Associate Degree or Higher") + ylab("Covid infection rate")
ggplot(
covid_data[
clean_outliers(covid_data$Covid_Infection_Rate),],
aes(
x=associate_degree+bachelor_degree,
y=Covid_Infection_Rate)) +
geom_point() +
ggtitle("Education vs Covid Infection Rate") +
xlab("Ratio of Population With Associate Degree or Higher") + ylab("Covid infection rate")
ggplot(
covid_data[
clean_outliers(covid_data$Covid_Infection_Rate)
& clean_outliers(covid_data$Median_Household_Income),],
aes(x=Median_Household_Income, y=Covid_Infection_Rate)) +
geom_point() +
ggtitle("Socioeconomic Status vs Covid Infection Rate") +
xlab("Median Household Income") + ylab("Covid infection rate")
